# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L-xy2_MKOjeq3e1LYTpWZRFPUVc1s5J6
"""

import gradio as gr
from fastapi import FastAPI

app = FastAPI()

@app.get("/")
def read_main():
    return {"message": "This is GIKI's Admission Chatbot"}

replicate_api_token = input('Enter Replicate API token: ').strip()
if not (replicate_api_token.startswith('r8_') and len(replicate_api_token) == 40):
  raise ValueError('Please enter a valid Replicate API token.')
urls = URLS
user_name = input("Enter your name? ").strip()

print('Initializing...')
chatbot = Chatbot(replicate_api_token, user_name)
chatbot.initialize_chatbot(urls)

def generate_reply(input_text):
    if input_text.lower() in ['exit', 'quit', 'bye']:
        response = "Goodbye! Have a nice day!"
        return response
    if input_text.lower() == 'clear':
        chatbot.clear_memory()
        response = "Conversation memory has been cleared."
        return response
    else:
      response = chatbot.generate_response(input_text)
      words = response.split()
      if len(words) > 1:
        full_response = response
      else:
        full_response = response.replace(" ","")
      return full_response

# Gradio Interface
iface = gr.Interface(
    fn=generate_reply,  # Function to generate the reply
    inputs=gr.Textbox(),  # Text input component
    outputs=gr.Textbox()  # Text output component
)

app = gr.mount_gradio_app(app, iface, path="/gradio")